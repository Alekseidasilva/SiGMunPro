@model MVC.Models.Entidades.Usuario.UserLogin

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>SiGMun | Entrar</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <!-- Bootstrap 3.3.7 -->
 
    <link rel="stylesheet" href="~/Extras/bower_components/bootstrap/dist/css/bootstrap.min.css">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="~/Extras/bower_components/font-awesome/css/font-awesome.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="~/Extras/bower_components/Ionicons/css/ionicons.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="~/Extras/dist/css/AdminLTE.min.css">
    <!-- iCheck -->
    <link rel="stylesheet" href="~/Extras/plugins/iCheck/square/blue.css">
</head>
<body class="hold-transition login-page">

    <div class="login-box">
        <div class="login-logo">
            <a href="~/Views/Home/Dashboard.cshtml">Si<b>GM</b>un</a>
        </div>

        <!-- /.login-logo -->
        <div class="login-box-body">
            <p class="login-box-msg"><b>S</b>istema de <b>G</b>erenciamento de <b>M</b>unicípes</p>

            @using (Html.BeginForm("Login", "Conta"))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <section id="loginForm">
                    <div class="form-group has-feedback">

                        <span class="glyphicon glyphicon-user form-control-feedback"></span>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", PlaceHolder = "Login", autofocus = "" } })
                        <small>
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </small>
                    </div>

                    <div class="form-group has-feedback">
                        <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                        @Html.PasswordFor(model => model.Senha, new { @class = "form-control", PlaceHolder = "Senha" })
                        <small>
                            @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                        </small>
                    </div>
                    <small class="small">  <a href="#">Esqueci minha senha</a><br></small>
                    <div class="row">

                        <div class="col-xs-8">
                            <div class="checkbox icheck">
                                <label>Conectado</label>
                                @*@Html.EditorFor("", checked(true))
                                @Html.LabelFor("Contectado","Permaner conectado")*@

                            </div>
                        </div>
                       
                        <div class="col-xs-4">
                            <button type="submit" class="btn btn-primary btn-block btn-flat">ENTRAR</button>
                        </div>
                    </div>
                </section>
                
                <div class="social-auth-links text-center">
                    <p>- OU -</p>
                  
                    <a href="#" class="btn btn-block btn-social btn-facebook btn-flat">
                        <i class="fa fa-facebook"></i> Entrar usando
                        Facebook
                    </a>
                    <a href="#" class="btn btn-block btn-social btn-google btn-flat">
                        <i class="fa fa-google-plus"></i> Entrar usando
                        Google+
                    </a>
                </div>
                <!-- /.social-auth-links -->

            }
        </div>
        <!-- /.login-box-body -->
    </div>
<!-- jQuery 3 -->

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<!-- Bootstrap 3.3.7 -->
    <script src="~/Scripts/bootstrap.min.js"></script><!-- iCheck -->
    <script src="~/Extras/plugins/iCheck/icheck.min.js"></script>
    <script>
        $(function () {
            $('input').iCheck({
                checkboxClass: 'icheckbox_square-blue',
                radioClass: 'iradio_square-blue',
                increaseArea: '20%' /* optional */
            });
        });
    </script>

</body>
</html>
























































@*<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Login</title>
</head>
<body>
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>UserLogin</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.LoginProvider, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LoginProvider, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LoginProvider, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.ProviderKey, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProviderKey, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProviderKey, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>*@
