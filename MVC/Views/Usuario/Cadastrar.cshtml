@using System.Net.Mime
@using System.Web.UI.WebControls
@model MVC.Models.Entidades.Usuario.User

@{
    ViewBag.Title = "Cadastrar";
}





@using (Html.BeginForm())
{
 @Html.ValidationSummary(true, "", new {@class = "text-danger"})
 <section class="col-lg-7 connectedSortable">
     <div class="box box-info">
        <div class="box-header">
            <i class="fa fa-user-circle"></i>
            <h2 class="box-title">Preencha os campos...</h2>
        </div>
         <div class="box-body">
             <div class="small-box">
                 <div class="input-group">
                     <span class="input-group-addon"><i class="glyphicon glyphicon-camera"></i></span>
                     @Html.EditorFor(model => model.NomeCompleto, new {htmlAttributes = new {@class = "form-control", PlaceHolder="Nome Completo"}})
                     <small>@Html.ValidationMessageFor(model => model.NomeCompleto, "", new {@class = "text-danger"})</small>
                 </div>
             </div>
             <div class="input-group">
                 <span class="input-group-addon"><i class="glyphicon glyphicon-camera"></i></span>
                 @Html.EditorFor(model => model.UserName, new {htmlAttributes = new {@class = "form-control", PlaceHolder="Login"}})
                 <small>@Html.ValidationMessageFor(model => model.UserName, "", new {@class = "text-danger"})</small>
             </div>
         </div>
         <div class="box-body">
             <div class="small-box">
                 <div class="input-group">
                     <span class="input-group-addon"><i class="glyphicon glyphicon-camera"></i></span>
                     @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control", PlaceHolder="Email"}})
                     <small>@Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})</small>
                 </div>
             </div>
             <div class="input-group">
                 <span class="input-group-addon"><i class="glyphicon glyphicon-camera"></i></span>
                 @Html.EditorFor(model => model.PasswordHash, new {htmlAttributes = new {@class = "form-control", PlaceHolder="Senha"}})
                 <small>@Html.ValidationMessageFor(model => model.PasswordHash, "", new {@class = "text-danger"})</small>
             </div>
         </div>
         <div class="box-body">
             <div class="small-box">
                 <div class="input-group">
                     <span class="input-group-addon"><i class="glyphicon glyphicon-camera"></i></span>
                     @Html.EditorFor(model => model.PasswordHash, new {htmlAttributes = new {@class = "form-control", PlaceHolder="Confirmar senha"}})
                     <small>@Html.ValidationMessageFor(model => model.PasswordHash, "", new {@class = "text-danger"})</small>
                 </div>
             </div>
             <div class="input-group">
                 <span class="input-group-addon"><i class="glyphicon glyphicon-camera"></i></span>
                 @Html.EditorFor(model => model.PhoneNumber, new {htmlAttributes = new {@class = "form-control", PlaceHolder="Telefone"}})
                 <small>@Html.ValidationMessageFor(model => model.PhoneNumber, "", new {@class = "text-danger"})</small>
             </div>
         </div>
         
         
         
         
         
         
         
         
         

         
         
         
         <div class="box-body">
             <div class="input-group">
                 

                 
                 


                 <label>Perfil </label>
                 @Html.DropDownListFor(model=>model.PerfilId,new List<SelectListItem>(ViewBag.perfil),"Selecione o Perfil")
                 <small>@Html.ValidationMessageFor(model => model.NomeCompleto, "", new {@class = "text-danger"})</small>

                 
                 <small>@Html.ValidationMessageFor(model => model.NomeCompleto, "", new {@class = "text-danger"})</small>
                 <fieldset>
                     <legend>Estado</legend>
                     @Html.RadioButtonFor(m=>m.Estado,"true",htmlAttributes: new {@class="form-inline", type="radio"}) Activado<br/>
                     @Html.RadioButtonFor(m=>m.Estado,"false") Desativado 
                 </fieldset>
                 
                 
               
                 
                 
                 
                 <small>@Html.ValidationMessageFor(model => model.Estado, "", new {@class = "text-danger"})</small>
                 
                 


             </div>
         </div>
       
         

             
          
     </div>
        <div class="box-footer clearfix">
            
            <button type="button" class="pull-right btn btn-danger" id="#"><i class="fa fa-remove"></i> Cancelar</button> 
            <button type="submit" class="pull-left btn btn-success"  id="#"><i class="fa fa-save"></i> Gravar</button>
         </div>
     
 </section>













@*<p></p>
    <div class="box box-info">
        <section class="content">
        <div class="container-fluid">
            <div class="row">
                 <div class="col-xs-12 col-md-6">
                     <div class="small-box">
                         <div class="input-group">











                         </div>
                    </div>
                 </div> 
            </div>
     </div>
 </section>
</div>*@



}








    
 

@*<div class="form-group">
      <div class="col-md-offset-2 col-md-10">
          <input type="submit" value="Create" class="btn btn-default" />
      </div>
   </div>*@
